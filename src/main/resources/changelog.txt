1.1.3     _/__/21
    New Features:
        - Added a debug level 5 for messages that are extremely common will rarely be used for debugging (like a message saying a single block has been loaded)
        - Added the command  "/woz get [item id]"  which gives a player the item specified in the  "item"  section of the custom block's definition
            - The new permission  "worldofzombies.command.get"  has been added for this command
            - This command includes dynamic tab completion based on the active custom blocks from the most recent plugin reload
            - If the item doesn't have the required custom block NBT tags, they will be added to the item automatically
        - Added the command  "/woz item nbt (-yaml)"  which sends the player the NBT API string for the item in their main hand
            - The new permission  "worldofzombies.command.item"  has been added for this command
            - The optional flag  "-yaml"  will format the string to start and end with a single quote and escapes the internal single quotes
                - This flag is intended to be used so the returned string can be pasted directly into a yaml file
        - Added a MultiBlockChange packet listener with same functionality as existing BlockChange packet listener
        - Added an error message when a duplicate custom block ID definition is detected
        - Custom block definition yaml files are now ONLY loaded on startup and  /woz reload  to increase performance
        - Added a check in BlockChange and MultiBlockChange packets so that blocks will only be disguised if their real BlockData matches the BlockData in the packet
        - More details for all new custom block features can be found in the file  WorldOfZombies\CustomItems\demo.yml
        - Improved "item" custom block drop tag to include anything in the Material class
        - Added functionality to calculate which custom blocks will drop items based on the "yield" of explosions
        - Added functionality to calculate custom block drops for blocks that break because from explosions
            - Added  "options.blast-resistant"  to not break in explosions
        - Added piston event functionality (push and pull)
            - Added  "options.cancel-piston-push"  ,  "options.cancel-piston-pull"  , and  "options.piston-breakable"

    Changes:
        - Changed structure of all logged blocks (blocks will not auto update)
            - Custom block id is now stored in the tag  "[location].id"  , and the latest disguised-data is stored in the tag  "[location].disguised-block"
            - The new tag  "chunk-reload-id"  is how the plugin determines if it should recalculate blocks'  "[location].disguised-block"  when a chunk is loaded, so don't change it unless you want that data to be recalculated
            - The new custom block config option  "recalculate-chunk-disguises-blacklist"  is a list of world names which will never recalculate block's  "[location].disguised-block"  , effectively ignoring the  "chunk-reload-id"  tag
        - Replaced the  "item"  ,  "nbt-item"  , and  "custom-item"  tags with a different format (check demo.yml for details)
            - MAKE SURE TO CHANGE THE ITEM FORMAT OR ITEM DROPS WILL NOT WORK
        - Replaced all "_" in block definition tags with "-"
            - MAKE SURE TO CHANGE TAG NAMES IN YOUR DEFINITIONS OR ELSE CUSTOM BLOCKS WILL NOT WORK
            - For example,  "actual_block"  is now  "actual-block"
        - Renamed the file  WorldOfZombies\custom_block.yml  to  WorldOfZombies\custom-block.yml  (replaced "_" with "-")
        - Removed the requirement of  "nbt-item"  or  "item"  in an individual drop section
        - NBT tags for custom items are now inside the section WoZItem
            - MAKE SURE TO CHANGE THE NBT FORMAT IN ALL CUSTOM ITEMS OR ELSE CUSTOM BLOCKS WILL NOT WORK
            - Also renamed the tags from  "IsCustomBlock"  and  "CustomBlock"  to  "IsCustomItem"  and  "CustomItem"
            - New NBT format is:  "WoZItem: { IsCustomBlock:[boolean], CustomItem: [item id] }"
        - Changed test command from  /bb  to  /woztest  (should not be used without knowing exactly what this command does)

    Bug Fixes:
        - Fixed a bug where custom block IDs wouldn't be properly removed after deleting their definition and reloading the plugin
        - Fixed a bug where the custom block  "demo-block"  would throw errors because of an incompatible  "sync-state"
        - Small bugfixes and improvements
        - Known bug: sometimes custom blocks with active  "sync-states"  will cause an error about  "sync_states"  and  "disguised-data"  when being pulled by a piston with a slime block, even though the block appears to be disguised correctly


1.1.2     7/26/21
    - Overhauled command syntax - all commands are now:  /woz [command] [args]
        - For example,  /wozreload  is now  /woz reload  , and  /wozdatabase delete [world]  is now  /woz database delete [world]
        - Information about this plugin can be found by running  /woz info  or just  /woz
    - Commands that are run incorrectly or produce an error now send better formatted and more detailed error messages
    - Moved block un-logging from BlockBreakEvent and BlockChange packet handler into BlockDropItemEvent handler (no effect on functionality)
    - Overhauled custom block logging system - custom blocks are now defined in separate files and logged using their IDs
        - All data for custom block types is stored in files in the new  CustomItems  folder
            - File names in this folder can be arbitrary, and there can be any number of custom blocks in each file
            - Sub-folders with definition files in the  CustomItems  folder are allowed
        - Removed functionality for the  "keep-mojang-prefix"  config option
        - Custom block items only require the NBT tags  IsCustomBlock: [boolean]  and  CustomBlock: [custom block ID]
        - Custom blocks now support custom drops, including drop chances and items with NBT tags
            - See the demo file in the plugin data folder at  WorldOfZombies\CustomItems\demo.yml  for an example of all of the available options in a custom block definition and their formatting
                - If this file does not exist, temporarily remove or clear the  CustomItems  folder, and it will be automatically added
    - Added new command:  /woz database
        - /woz database delete [world]  deletes all of the custom block data in a world
        - /woz database clone [world1] [world2]  deletes the custom block data in  world2  , then clones the custom block database from  world1  to  world2
            - world1  and  world2  cannot be the same
        - /woz database confirm  is the required confirmation for both of the above commands
    - Added source code for this plugin onto GitHub:  https://github.com/Mackblue1/WorldOfZombies
    - Made many small changes in the code including some small new error catchers and other improvements
    - Added debug level 4 for logging messages about individual blocks or messages that will definitely be spammed often
        - For example, logging the location of a successfully loaded block or that a chunk does not have any custom blocks because it doesn't have a database file
        - Any value of debug higher than 4 will be treated as debug level 4

1.1.1     6/23/21
    - Fixed a critical error that prevented the plugin from being loaded when the plugin data folder didn't exist
    - Added a depend on NBT API to read custom NBT tags from custom block items
        - Custom blocks must have these tags:  isCustomBlock: [boolean], actualBlockData: [BlockData as a string], disguisedBlockData: [BlockData as a string]
        - A custom block is only logged if:  it has the tag isCustomBlock:true  and the tags  actualBlockData and disguisedBlockData  aren't empty
    - Changed the structure of the custom block data folder:
        - Instead of  \WorldOfZombies\customBlockChunks\[chunk files]  , the new structure is  \WorldOfZombies\BlockDatabase\[world name]\[chunk files]
        - Changed the underscores in files' names to periods and replaced the world name with the word "chunk", so the format is now:  chunk.[chunkX].[chunkZ].yml
    - Changed the structure of  config.yml  , so it is recommended to delete the file so it can be recreated
    - Added a customBlockConfig boolean  "keep-mojang-prefix"  which will determine the structure of the BlockData stored in files
        - For example, if the option is true, stored BlockData could be  "minecraft:diamond_ore"  but if its false, it could be  "diamond_ore"
    - Added a checker to delete empty files and subChunk sections to reduce file sizes
    - Added a debug level 3 for seeing very spammy messages that usually won't be used to fix errors
    - Added a section in  /wozinfo  to show the enabled or disabled status of modules

1.1.0     6/18/21:
    - Changed the  "debug"  option in the config to be an integer from 0-2, where 0 is no messages, 1 is some messages, and 2 is all messages
    - Added basic logic for placing, breaking, and loading custom blocks from files instead of using entities
    - Creates a new folder "customBlockChunks" which stores files corresponding to a chunk named:  [world]_[chunkX]_[chunkZ].yml
        - Each file stores data for the chunk whose location is the file name
        - Files are divided into subChunk headers
            - Each header is numbered from 0-15 (usually out of order) based on the Y-coordinate of a block divided by 16
            - Each header should only contain data for blocks with a Y-coordinate between  [number] * 16  and  (([number] + 1) * 16) - 1
                - For example, subChunk6 should only hold blocks with a Y-coordinate between 96 and 111, and subChunk7 should only hold blocks with a Y-coordinate between 112 and 125
            - Each entry for a custom block contains the location of the block and the disguised block's BlockData
                - For example, an entry could be:  survival_19931_70_-17212: minecraft:diamond_ore
    - When any block is placed, its location and BlockData will be logged to the appropriate file, and the file and subChunk header will be created if necessary
    - When a chunk is loaded by a player using the ChunkData packet, all the blocks in that chunk's file will be loaded
        - Each subChunk header is given its own MultiBlockChange packet, and all of the data in each entry is added to the packet
    - When a custom block is broken, its entry will be removed and will therefore not be loaded anymore
