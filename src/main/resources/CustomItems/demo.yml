#
#  This is an example of 2 different custom block definitions and their drops
#  Custom drops are not required, and blocks will work normally with just "actual-block" and "disguised-block"
#  All tags in a definition are optional except "actual-block" and "disguised-block" ("drops.enabled" is required if the rest of the "drops" is empty)
#  Inside of the parent "drops" section, there is no restriction on the amount of child drop sections or their names
#  Each tag outside the parent "drops" section cannot appear more than once, and tags inside a child drop section cannot appear more than once in a single drop section
#

demo-block:
  #  As of version 1.1.2, functionality for this option has not been added but is planned for future versions
  item: '{id:"minecraft:stone",Count:1b}'
  block:
    #  "actual-block" and "disguised-block" here are the same as the tags on custom block items in version 1.1.1
    #  If "actual-block" is empty, the server-side will not be changed when the custom block is placed
    actual-block: oak_slab

    #  If "disguised-block" is empty, the client-side block will be the same as the server-side block
    disguised-block: birch_slab[waterlogged=true]

    #  Syncs the vanilla block states between the vanilla placed block, "actual-block", and "disguised-block"
    #  The code handling "sync-states" will not succeed when "actual-block" (or the normally placed block if "actual-block" is empty) supports a state that "disguised-block" does not.
    #  For example, an "actual-block" of a log with the "facing" tag and a "disguised-block" of a diamond block would throw an error because the diamond block cannot support the "facing" tag
    sync-states:
      - facing
      - half
      - shape
      - type
      - axis

    options:
      #  Stops a block from being broken by all types of explosions, defaults to "false"
      blast-resistant: true

      #  Causes a block to break instantly when clicked, defaults to "false"
      instant-break: false

      #  Stops a block from being broken by flowing water or lava, defaults to "false"
      disable-fluid-destroy: false

      #  Stops a block from being broken by anything other than a player in creative mode, defaults to "false"
      unbreakable: false

      #  Causes a block to break when pushed by pistons, defaults to "false"
      #  Due to limitations made by the game, blocks will only break if there is a free block in the position where they would be if the block didn't break
      piston-breakable: false
      #  Cancels piston push events if enabled, defaults to "false"
      cancel-piston-push: true
      #  Cancels piston pull events if enabled, defaults to "false"
      cancel-piston-pull: true

    drops:
      #  This is intended to be used like the block "no-drops-block" included in this file, defaults to "true", and if it's "false" then the original drops will not be changed
      enabled: true

      #  Cancels any xp normally dropped by a broken block (like an ore block), defaults to "false"
      cancel-xp: true

      axe:
        #  As of 1.1.3, this only includes the official names of required enchantments on the item that broke the custom block
        #  If the item is missing any of these enchantments, then this section will be exited
        conditions:
          - silk_touch

        #  This is the full format for an item section, whose name is a valid Bukkit Material name or custom item ID
        diamond:
          #  Adds nbt tags to an item, can be either a full item NBT (shown here) or just NBT tags (shown in the item section cake.no-drops-block)
          nbt: '{id:"minecraft:wooden_axe",tag:{Damage:1},Count:1b}'

          #  If this is an integer, sets the amount to drop of an item to this value, defaults to 1
          #  If this is two integers separated by a "-", sets the amount to drop of an item to a random number between the two values (inclusive)
          count: 2-3

      dirt:
        #  "chance" must be a decimal greater than or equal to 0 and less than 1
        #  A random number greater than or equal 0 and less than 1 is generated, and if this number is greater than the value of "chance" then this section will be exited
        chance: .56

        #  The new xp value changed by "set-xp", "add-xp", and "multiply-xp" is synced between sections, and the sections are read from the top down
        #  The order for reading xp related tags within a section is: 1. "set-xp"  2. "add-xp"  3. "multiply-xp"
        #  All 3 options accept a "double", which includes decimal numbers, but the final value will be rounded down into an "int"
        #  Sets the dropped xp to this value
        set-xp: 15
        #  Adds this value to the dropped xp
        add-xp: 2
        #  Multiplies the dropped xp by this value
        multiply-xp: 1.5

        #  This is the shortened format for an item, where the key is the name is a valid Bukkit Material or custom item ID, and the value represents the "count" tag in a full formatted item section
        dirt: 2

      cake:
        zombie-cake:
          nbt: '{DroppedFromDemoBlock:1b}'
          count: 2

no-drops-block:
  item: '{id:"minecraft:cake",Count:1b}'
  block:
    disguised-block: gold_block
    drops:
      enabled: false

match:
  item: '{id:"minecraft:iron_door",Count:1b}'
  block:

    #  Changes the disguised BlockData of a block if its actual BlockData matches the states in this section
    #  States can optionally be nested inside each other (shown below) or not nested (especially for things like crops with only one BlockData tag)
    match-states:

      #  The name of a section ("facing" in the top section here) is the name of the state to be checked
      facing:

        #  This is the value of the state above, so here it is checking if the actual BlockData of a block contains the BlockData tag "facing=north"
        state: north

        #  Nested states (like "hinge" or "powered" in this example) are only checked if the parent state ("facing" in this example) matches the actual BlockData
        hinge:
          state: left

          #  As soon as "disguised-block" is found in a successful match section, the disguised BlockData of the block will be set to this value, and "match-states" will be exited
          disguised-block: iron_block
          disguised-block2: iron_block

          #  Since this state appears in the same section as "disguised-block", it will never be checked and a block's disguised BlockData will never be diamond_block, even if it matches all the above states and is open
          open:
            state: true
            disguised-block: diamond_block
            disguised-block2: diamond_block

        #  Any numbers at the end of a state name will be ignored, which allows multiple of the same state to be checked without causing yaml errors for having multiple keys with the same name
        #  Since this appears below a different state section, this will only be checked if the above section fails at some point
        hinge2:
          state: right
          open:
            state: false
            disguised-block: warped_door
            disguised-block2: warped_door

            #  This functions the same as the main "disguised-sync-states" section that is a direct child of "block" (and has support for ending with "2", just like the main "disguised-sync-states")
            sync-states:
              - facing
              - half
              - hinge
              - open
              - powered

custom-door:
  #  The multi custom block handler is versatile, so it will work for all items that become two placed blocks, like beds or doors
  item: '{id:"minecraft:iron_door",Count:1b}'
  block:
      #  This will disguise the main placed block, which is at the location that the player clicked, and would be the same place as if a player placed a single block in the same place
      disguised-block: glass

      #  This will disguise the second placed block, which is the extra block that is placed next to the main block, like the head of a bed or top of a door
      disguised-block2: iron_block

      match-states:
        facing:
            state: north
            hinge:
              state: left
              disguised-block: diamond_block
              #  For custom multi blocks, the second block will look for this tag instead of "disguised-block" if all states are matched
              disguised-block2: emerald_block

no-press-button:
  item: '{id:"minecraft:oak_button",Count:1b}'
  block:
    actual-block: lever
    disguised-block: stone_button

    #  "actual-sync-states" and "disguised-sync-states" have the same functionality as the base "sync-states", and they are meant to be more specific extensions of the base "sync-states"
    #  The base  "sync-states"  will be checked after the more specific sections, so  "sync-states"  will take over if either (or both) of the specific sections are missing
    #  This will only be checked when the server-side block is calculated (when the block is placed)
    actual-sync-states:
      - face
      - facing
      - powered

    #  This will only be checked when the disguised block is calculated, so in this example, the "powered" state will only be synced when the block is placed
    disguised-sync-states:
      - face
      - facing

    #  Since "actual-sync-states" and "disguised-sync-states" both exist for this block, this section will never be checked
    sync-states:
      - powered

always-open-trapdoor:
  item: '{id:"minecraft:birch_trapdoor",Count:1b}'
  block:
    disguised-block: spruce_trapdoor

    #  Functionality for "force-actual-states2" is the same as the base "force-actual-states", but it is only checked by the second block of a multi custom block
    #  The format for this section is:  [state name]: [value], where the state name and value must be valid
    #  This section will force these states onto the server-side block, but does not directly affect the disguised block
    force-actual-states:
      open: true

    sync-states:
      - open